{"version":3,"sources":["components/SocketContext.js","components/GameContext.js","components/Team1Context.js","components/Team2Context.js","components/LifeBar.js","components/ModalWinner.js","components/StartRound.js","components/StartEnterGame.js","components/Emojis.js","components/Powers.js","components/Status.js","components/ListPlayersText.js","components/InGame.js","components/Center.js","serviceWorker.js","index.js","App.js","img/vs.png","img/trophy.gif","img/CaboAtaquePragas.png","img/CaboAtaqueVermes.png","img/CaboDefesaVermes.png","img/CaboDefesaPragas.png","img/ko.png","img/victory.gif"],"names":["SocketContext","React","createContext","GameContext","Team1Context","Team2Context","LifeBar","gameSettings","useContext","socket","useState","visible1","setVisible1","visible2","setVisible2","superChat1","setSuperChat1","superChat2","setSuperChat2","on","data","name","team","value","setTimeout","timeAnimation","Container","fluid","Row","Col","xs","lg","ProgressBar","style","height","max","team1","MAX_LIFE","variant","now","life","key","animated","src","vsImg","width","alt","team2","MAX_ENERGY","status","energy","direction","className","color","qnt","result","qntVictory","index","roundsWon","push","icon","faCheckCircle","winRounds","faCircleRegular","roundsWonTeam1","winner","round","roundsWonTeam2","animationOut","animationOutDuration","isVisible","ModalWinner","showModal","setShowModal","setWinner","useEffect","console","log","Modal","show","onHide","animation","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","trophy","Footer","StartRound","disabled","setDisabled","waiting","setWaiting","startRound","emit","roundDisabled","Spinner","Button","onClick","textButton","setTextButton","setVariant","gettingPlayers","emojis","Powers","props","url_emoji","emoji","Emojis","battle","isPlay","powers","attack","displayEmoji","defense","Status","visible","setVisible","battleId","setBattleId","setAttack","setDefense","animeIn","setAnimeIn","imgAttack2","imgDefense2","imgAttack1","imgDefense1","animeInDomain","min","length","Math","ceil","floor","random","fuild","animationIn","animationInDuration","hitPoints","ListPlayers","players","setPlayers","colors","map","element","isChatSponsor","fontSize","InGame","played","useRef","startButtonShow","setStartButtonShow","inKo","setInKo","koAudio","Audio","current","volume","play","teamsChoosed","koImg","Answers","idLive","Boolean","window","location","hostname","match","ReactDOM","render","setSocket","setGameSettings","setTeam1","setTeam2","isReady","setIsReady","youtubeOff","setYoutubeOff","pathname","split","url","includes","socketIOClient","Provider","victory","this","state","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.5d6a9680.chunk.js","sourcesContent":["import React from \"react\";\n\nconst SocketContext = React.createContext();\n\nexport default SocketContext;\n","import React from \"react\";\n\nconst GameContext = React.createContext();\n\nexport default GameContext;\n","import React from \"react\";\n\nconst Team1Context = React.createContext();\n\nexport default Team1Context;\n","import React from \"react\";\n\nconst Team2Context = React.createContext();\n\nexport default Team2Context;\n","import React, { useContext, useState } from 'react';\nimport GameContext from './GameContext.js';\nimport SocketContext from './SocketContext.js';\nimport vsImg from './../img/vs.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faCircle as faCircleRegular } from '@fortawesome/free-regular-svg-icons';\nimport { ProgressBar, Container, Row, Col } from 'react-bootstrap';\nimport { Animated } from 'react-animated-css';\n\nexport default function LifeBar() {\n\tconst gameSettings = useContext(GameContext);\n\tconst socket = useContext(SocketContext);\n\tconst [visible1, setVisible1] = useState(false);\n\tconst [visible2, setVisible2] = useState(false);\n\tconst [superChat1, setSuperChat1] = useState('');\n\tconst [superChat2, setSuperChat2] = useState('');\n\n\tsocket.on('superChat', (data) => {\n\t\tlet { name, team, value } = data;\n\t\tif (team === 1) {\n\t\t\tsetSuperChat1(`${name}: + ${value}`);\n\t\t\tsetVisible1(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetVisible1(false);\n\t\t\t}, 3000);\n\t\t}\n\t\tif (team === 2) {\n\t\t\tsetSuperChat2(`${name}: + ${value}`);\n\t\t\tsetVisible2(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetVisible2(false);\n\t\t\t}, 3000);\n\t\t}\n\t});\n\tconst [timeAnimation] = useState(30000);\n\n\tlet styleReversed = {\n\t\tdirection: 'rtl',\n\t};\n\n\tfunction round() {\n\t\tif (gameSettings.winner) {\n\t\t\treturn 'FINAL';\n\t\t} else if (gameSettings.round > 0) {\n\t\t\treturn 'Round ' + gameSettings.round;\n\t\t} else if (gameSettings.round === 0) {\n\t\t\treturn '';\n\t\t}\n\t}\n\tfunction roundsWonTeam1() {\n\t\tlet result = [];\n\t\tlet qntVictory = 0;\n\t\tfor (let index = 0; index < gameSettings.team1.roundsWon; index++) {\n\t\t\tresult.push(<FontAwesomeIcon icon={faCheckCircle} color=\"lime\" />);\n\t\t\t++qntVictory;\n\t\t}\n\t\tfor (let index = qntVictory; index < gameSettings.winRounds; index++) {\n\t\t\tresult.push(<FontAwesomeIcon icon={faCircleRegular} color=\"lime\" />);\n\t\t}\n\t\treturn result;\n\t}\n\tfunction roundsWonTeam2() {\n\t\tlet result = [];\n\t\tlet qntVictory = 0;\n\t\tfor (let index = 0; index < gameSettings.team2.roundsWon; index++) {\n\t\t\tresult.push(<FontAwesomeIcon icon={faCheckCircle} color=\"lime\" />);\n\t\t\t++qntVictory;\n\t\t}\n\t\tfor (let index = qntVictory; index < gameSettings.winRounds; index++) {\n\t\t\tresult.push(<FontAwesomeIcon icon={faCircleRegular} color=\"lime\" />);\n\t\t}\n\t\treturn result;\n\t}\n\tif (gameSettings) {\n\t\t// console.log(\"gameSettings\", gameSettings.lifeBar);\n\t\treturn (\n      <div>\n        <br />\n        <Container fluid>\n          <Row>\n            <Col xs lg=\"5\">\n              <ProgressBar\n                style={{ height: 30 + \"px\" }}\n                max={gameSettings.team1.MAX_LIFE}\n              >\n                <ProgressBar\n                  variant=\"danger\"\n                  max={gameSettings.team1.MAX_LIFE}\n                  now={gameSettings.team1.MAX_LIFE - gameSettings.team1.life}\n                  key={1}\n                />\n                <ProgressBar\n                  variant=\"warning\"\n                  animated\n                  max={gameSettings.team1.MAX_LIFE}\n                  now={gameSettings.team1.life}\n                  key={2}\n                />\n              </ProgressBar>\n            </Col>\n            <Col xs lg=\"2\">\n              <img src={vsImg} width=\"45vw\" alt=\"VS\" />\n            </Col>\n            <Col xs lg=\"5\">\n              <ProgressBar\n                style={{ height: 30 + \"px\" }}\n                max={gameSettings.team2.MAX_LIFE}\n              >\n                <ProgressBar\n                  variant=\"warning\"\n                  animated\n                  now={gameSettings.team2.life}\n                  max={gameSettings.team2.MAX_LIFE}\n                  key={1}\n                />\n                <ProgressBar\n                  variant=\"danger\"\n                  max={gameSettings.team2.MAX_LIFE}\n                  now={gameSettings.team2.MAX_LIFE - gameSettings.team2.life}\n                  key={2}\n                />\n              </ProgressBar>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs lg=\"3\">\n              <ProgressBar\n                style={{ height: 8 + \"px\" }}\n                max={gameSettings.team1.MAX_ENERGY}\n              >\n                <ProgressBar\n                  animated\n                  // variant=\"success\"\n                  max={gameSettings.team1.MAX_ENERGY}\n                  now={gameSettings.team1.status.energy}\n                  key={2}\n                />\n              </ProgressBar>\n            </Col>\n            <Col xs lg=\"6\"></Col>\n            <Col xs lg=\"3\">\n              <ProgressBar\n                style={{ height: 8 + \"px\", direction: \"rtl\" }}\n                max={gameSettings.team2.MAX_ENERGY}\n              >\n                <ProgressBar\n                  animated\n                  max={gameSettings.team2.MAX_ENERGY}\n                  // variant=\"success\"\n                  now={gameSettings.team2.status.energy}\n                  style={styleReversed}\n                  key={1}\n                />\n              </ProgressBar>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs lg=\"2\" className=\"text-left\">\n              <h3 style={{ color: \"#995cf1\" }}>\n                {gameSettings.team1.name} ({gameSettings.team1.qnt})\n              </h3>\n            </Col>\n            <Col xs lg=\"3\" className=\"text-right\">\n              {roundsWonTeam1()}\n            </Col>\n            <Col xs lg=\"2\" className=\"text-center\">\n              <h4>{round()}</h4>\n            </Col>\n            <Col xs lg=\"3\" className=\"text-left\">\n              {roundsWonTeam2()}\n            </Col>\n            <Col xs lg=\"2\" className=\"text-right\">\n              <h3 style={{ color: \"#f0555b\" }}>\n                {gameSettings.team2.name} ({gameSettings.team2.qnt})\n              </h3>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs lg=\"2\" className=\"text-left\">\n              <Animated\n                animationOut=\"zoomOut\"\n                animationOutDuration={timeAnimation}\n                isVisible={visible1}\n              >\n                <h4 style={{ color: \"yellow\" }}>{superChat1}</h4>\n              </Animated>\n            </Col>\n            <Col xs lg=\"3\" className=\"text-right\"></Col>\n            <Col xs lg=\"2\" className=\"text-center\"></Col>\n            <Col xs lg=\"3\" className=\"text-left\"></Col>\n            <Col xs lg=\"2\" className=\"text-right\">\n              <Animated\n                animationOut=\"zoomOut\"\n                animationOutDuration={timeAnimation}\n                isVisible={visible2}\n              >\n                <h4 style={{ color: \"yellow\" }}>{superChat2}</h4>\n              </Animated>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n\t} else {\n\t\treturn 'Alow';\n\t}\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport SocketContext from \"./SocketContext\";\n// import GameContext from \"./GameContext.js\";\nimport trophy from \"./../img/trophy.gif\";\n\nexport default function ModalWinner() {\n  // const gameSettings = useContext(GameContext);\n  const socket = useContext(SocketContext);\n  const [showModal, setShowModal] = useState(false);\n  const [winner, setWinner] = useState(false);\n\n  useEffect(() => {\n    socket.on(\"endGame\", team => {\n      console.log(\"EndGame\", team);\n      setWinner(team.name);\n      open();\n    });\n  });\n\n  function close() {\n    setShowModal(false);\n  }\n\n  function open() {\n    setShowModal(true);\n  }\n\n  return (\n    <div>\n      <Modal\n        show={showModal}\n        onHide={close}\n        animation={false}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <div className=\"text-center\">Time Vencedor</div>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div className=\"text-center\">\n            <img src={trophy} width=\"400vw\" alt=\"VS\" />\n            <br />\n            <h1>{winner}</h1>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          {/* <Button variant=\"success\">Próxima Rodada</Button> */}\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport SocketContext from \"./SocketContext\";\nimport GameContext from \"./GameContext.js\";\n\nexport default function StartRound() {\n  const gameSettings = useContext(GameContext);\n  const socket = useContext(SocketContext);\n  const [disabled, setDisabled] = useState(false);\n  const [waiting, setWaiting] = useState(false);\n  function startRound() {\n    socket.emit(\"nextBattle\");\n  }\n  function showButton() {\n    if (!disabled) {\n      return (\n        <Button\n          variant=\"success\"\n          size=\"lg\"\n          onClick={startRound}\n          disabled={disabled}\n        >\n          Iniciar round {gameSettings.round + 1}\n        </Button>\n      );\n    } else {\n      if (waiting) {\n        return (\n          <>\n            <Spinner\n              animation=\"border\"\n              variant=\"white\"\n              style={{ width: \"3rem\", height: \"3rem\" }}\n            >\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n            <h3>Configurando sistema</h3>\n          </>\n        );\n      } else {\n        return \"\";\n      }\n    }\n  }\n  useEffect(() => {\n    if (gameSettings.roundDisabled) {\n      setDisabled(true);\n    } else {\n      setDisabled(false);\n    }\n    if (gameSettings.waiting) {\n      setWaiting(true);\n    } else {\n      setWaiting(false);\n    }\n  }, [gameSettings.roundDisabled, gameSettings.waiting]);\n  return <div>{showButton()}</div>;\n}\n","import React, { useContext, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"react-bootstrap\";\nimport SocketContext from \"./SocketContext\";\nimport GameContext from \"./GameContext.js\";\n\nexport default function StartRound() {\n  const gameSettings = useContext(GameContext);\n  const [textButton, setTextButton] = useState(\"Coletar jogadores\");\n  const [variant, setVariant] = useState(\"info\");\n  const socket = useContext(SocketContext);\n\n  function handleEnter() {\n    if (!gameSettings.gettingPlayers) {\n      socket.emit(\"getPlayers\");\n      setVariant(\"danger\");\n      setTextButton(\"Parar de coletar jogadores\");\n    } else {\n      socket.emit(\"stopGetPlayers\");\n    }\n  }\n  return (\n    <div>\n      <Button variant={variant} size=\"lg\" onClick={handleEnter}>\n        {textButton}\n      </Button>\n    </div>\n  );\n}\n","// images.js\nlet emojis = {\n  \"👽\": \"alien.svg\",\n  \"👑\": \"crown.svg\",\n  \"👻\": \"ghost.svg\",\n  \"🍇\": \"grapes.svg\",\n  \"🍔\": \"hamburguer.svg\",\n  \"💋\": \"kiss.svg\",\n  \"👌\": \"ok_hand.svg\",\n  \"💩\": \"pile_of_poo.svg\",\n  \"🍍\": \"pineapple.svg\",\n  \"🍗\": \"poutlry_leg.svg\",\n  \"❤️\": \"red_heart.svg\",\n  \"💍\": \"ring.svg\",\n  \"🤖\": \"robot_face.svg\",\n  \"💀\": \"skull.svg\",\n  \"😍\": \"smiling_face_with_heart_eyes.svg\",\n  \"😎\": \"smiling_face_with_sunglasses.svg\",\n  \"🍓\": \"strawberry.svg\",\n  \"👍\": \"thumbs_up.svg\",\n  \"🍉\": \"watermelon.svg\"\n};\n\nexport default emojis;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Emojis from './Emojis';\n\nexport default function Powers(props) {\n\tfunction url_emoji(emoji) {\n\t\tlet img = 'img/emojis/' + Emojis[emoji];\n\t\treturn img;\n\t}\n\n\tif (props.battle.isPlay) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Container fluid>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<img src={url_emoji(props.powers.attack.displayEmoji)} width=\"45vw\" alt=\"img1\" />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col className=\"text-center align-middle\">\n\t\t\t\t\t\t\t<h3>Ataque</h3>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t<img src={url_emoji(props.powers.energy.displayEmoji)} width=\"45vw\" alt=\"img1\" />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col className=\"text-center align-middle\">\n\t\t\t\t\t\t\t<h3>Mana</h3>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col className=\"text-center align-middle\">\n\t\t\t\t\t\t\t<img src={url_emoji(props.powers.defense.displayEmoji)} width=\"45vw\" alt=\"img1\" />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col className=\"text-center align-middle\">\n\t\t\t\t\t\t\t<h3>Defesa</h3>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\treturn <div></div>;\n\t}\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Animated } from \"react-animated-css\";\nimport imgAttack1 from \"./../img/CaboAtaquePragas.png\";\nimport imgAttack2 from \"./../img/CaboAtaqueVermes.png\";\nimport imgDefense1 from \"./../img/CaboDefesaVermes.png\";\nimport imgDefense2 from \"./../img/CaboDefesaPragas.png\";\n\nexport default function Status(props) {\n  const [visible, setVisible] = useState(false);\n  const [battleId, setBattleId] = useState(true);\n  const [attack, setAttack] = useState();\n  const [defense, setDefense] = useState();\n  const [animeIn, setAnimeIn] = useState(\"zoomInUp\");\n  // const [faSettings, setFaSettings] = useState({\n  // \tattack: { icon: faFireAlt, color: 'red' },\n  // \tdefense: { icon: faShieldAlt, color: 'blue' },\n  // });\n  const [timeAnimation] = useState(30000);\n  function getRandomInt(min, max) {\n    //console.log(min,max);\n    if (Math.ceil(min) === Math.floor(max)) {\n      return min;\n    } else {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n  }\n\n  useEffect(() => {\n    if (battleId !== props.battle.id) {\n      setVisible(true);\n      setBattleId(props.battle.id);\n      if (props.team.id === 1) {\n        setAttack(<img src={imgAttack2} width=\"450vw\" alt=\"Ataque\" />);\n        setDefense(<img src={imgDefense2} width=\"450vw\" alt=\"Defesa\" />);\n      } else {\n        setAttack(<img src={imgAttack1} width=\"450vw\" alt=\"Ataque\" />);\n        setDefense(<img src={imgDefense1} width=\"450vw\" alt=\"Defesa\" />);\n      }\n      let animeInDomain = [\n        \"zoomInDown\",\n        \"zoomInUp\",\n        \"zoomInLeft\",\n        \"zoomInRight\",\n        \"fadeInLeftBig\",\n        \"fadeInRightBig\",\n        \"backInDown\",\n        \"backInLeft\",\n        \"backInRight\",\n        \"backInUp\",\n        \"flip\",\n        \"lightSpeedInRight\",\n        \"lightSpeedInLeft\",\n        \"jackInTheBox\"\n      ];\n      setAnimeIn(animeInDomain[getRandomInt(0, animeInDomain.length - 1)]);\n      // let sizeAttack = '5x';\n      // let sizeDefense = '3x';\n      // if (props.team.status.defense && props.team.status.hitPoints < props.team.status.defense.value / 2) {\n      // \tsizeAttack = '3x';\n      // \tsizeDefense = '5x';\n      // }\n      // if (props.team.id === 1) {\n      // \tsetFaSettings({\n      // \t\tattack: { icon: faFireAlt, color: 'red', size: sizeAttack },\n      // \t\tdefense: { icon: faShieldAlt, color: 'blue', size: sizeDefense },\n      // \t});\n      // } else {\n      // \tsetFaSettings({\n      // \t\tattack: { icon: faFire, color: 'red', size: sizeAttack },\n      // \t\tdefense: { icon: faShieldAlt, color: 'green', size: sizeDefense },\n      // \t});\n      // }\n    }\n    setTimeout(() => {\n      setVisible(false);\n    }, 3000);\n  }, [battleId, props]);\n\n  if (props.battle.isPlay) {\n    return (\n      <div>\n        <Container fuild>\n          <Row>\n            <Col>\n              <Animated\n                animationOut=\"zoomOut\"\n                animationIn={animeIn}\n                animationInDuration={800}\n                animationOutDuration={timeAnimation}\n                isVisible={visible}\n              >\n                <h1>\n                  {attack}\n                  <br />\n                  {props.team.status.hitPoints}\n                </h1>\n              </Animated>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Animated\n                animationOut=\"zoomOut\"\n                animationIn={animeIn}\n                animationInDuration={800}\n                animationOutDuration={timeAnimation}\n                isVisible={visible}\n              >\n                <h1>\n                  {defense}\n                  <br />\n                  {Math.floor(props.team.powers.defense.value / 2)}\n                </h1>\n              </Animated>\n            </Col>\n          </Row>\n          <Row>\n            <Col></Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction getRandomInt(min, max) {\n  //console.log(min,max);\n  if (Math.ceil(min) === Math.floor(max)) {\n    return min;\n  } else {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n\nexport default function ListPlayers(props) {\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    let result = null;\n    let colors = [\n      \"#1f77b4\",\n      \"#ff7f0e\",\n      \"#2ca02c\",\n      \"#d62728\",\n      \"#9467bd\",\n      \"#8c564b\"\n    ];\n    if (props.team) {\n      console.log(props.team);\n      result = props.team.map(element => {\n        let color = colors[getRandomInt(0, colors.length - 1)];\n        let size = 20;\n        if (element.isChatSponsor) {\n          size = 30;\n          color = \"yellow\";\n        }\n        return (\n          <span style={{ color: color, fontSize: size, height: \"100%\" }}>\n            {element.name},{\" \"}\n          </span>\n        );\n      });\n    }\n    console.log(result);\n    setPlayers(result);\n  }, [props, props.team]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <b>{players}</b>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ModalWinner from \"./ModalWinner.js\";\nimport StartRound from \"./StartRound.js\";\nimport StartEnterGame from \"./StartEnterGame.js\";\nimport Powers from \"./Powers.js\";\nimport Status from \"./Status.js\";\nimport koImg from \"./../img/ko.png\";\n// import koAudio from \"./../mp3/ko.mp3\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Animated } from \"react-animated-css\";\n// import NameCloud from \"./NameCloud.js\";\nimport ListPlayersText from \"./ListPlayersText.js\";\nimport GameContext from \"./GameContext.js\";\nimport SocketContext from \"./SocketContext.js\";\nimport Team1Context from \"./Team1Context.js\";\nimport Team2Context from \"./Team2Context.js\";\n\nexport default function InGame() {\n  let played = useRef();\n  const socket = useContext(SocketContext);\n  const gameSettings = useContext(GameContext);\n  const [startButtonShow, setStartButtonShow] = useState(false);\n  const [winner, setWinner] = useState(false);\n  const [inKo, setInKo] = useState(false);\n  const team1 = useContext(Team1Context);\n  const team2 = useContext(Team2Context);\n\n  var koAudio = new Audio(\"./mp3/ko.mp3\");\n  played.current = false;\n  socket.on(\"result\", team => {\n    setWinner(team);\n  });\n\n  useEffect(() => {\n    setStartButtonShow(false);\n    if (\n      gameSettings.round > 0 &&\n      !gameSettings.battle.isPlay &&\n      !played.current\n    ) {\n      // console.log(\n      //   gameSettings.round,\n      //   gameSettings.battle.isPlay,\n      //   played.current\n      // );\n      played.current = true;\n      setInKo(true);\n      setTimeout(() => {\n        koAudio.volume = 0.5;\n        koAudio.play();\n        // console.log(\"Q\");\n      }, 1500);\n    } else {\n      played.current = false;\n    }\n    // eslint-disable-next-line\n  }, [gameSettings.round, gameSettings.battle.isPlay]);\n  function showKO() {\n    if (gameSettings.round > 0) {\n      setTimeout(() => {\n        setStartButtonShow(true);\n        setInKo(false);\n      }, 5000);\n      return (\n        <>\n          <Animated\n            animationIn=\"zoomInUp\"\n            animationInDuration={3000}\n            isVisible={true}\n          >\n            <img src={koImg} width=\"100%\" alt=\"KO\" />\n            <br />\n            <br />\n            <h1 className=\"display-2\">{winner.name}</h1>\n          </Animated>\n          <br />\n          <br />\n          <br />\n          <br />\n          {startButtonShow ? <StartRound /> : \"\"}\n        </>\n      );\n    } else {\n      return (\n        <>\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <StartRound />\n        </>\n      );\n    }\n  }\n  if (gameSettings.battle.isPlay) {\n    return (\n      <div>\n        <Container fluid className=\"h-100\">\n          <Row className=\"justify-content-md-center\">\n            <Col xs lg=\"1\" className=\"text-center align-middle\">\n              <Powers\n                powers={gameSettings.team1.powers}\n                battle={gameSettings.battle}\n              />\n            </Col>\n            <Col xs lg=\"5\" className=\"text-center align-middle\">\n              <Status team={gameSettings.team1} battle={gameSettings.battle} />\n            </Col>\n            <Col xs lg=\"5\" className=\"text-center align-middle\">\n              <Status team={gameSettings.team2} battle={gameSettings.battle} />\n            </Col>\n            <Col xs lg=\"1\" className=\"text-center align-middle\">\n              <Powers\n                powers={gameSettings.team2.powers}\n                battle={gameSettings.battle}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <ModalWinner gameSettings={gameSettings} />\n      </div>\n    );\n  } else if (!gameSettings.teamsChoosed) {\n    return (\n      <div>\n        <Container fluid className=\"h-100\">\n          <Row className=\"justify-content-md-center h-100\">\n            <Col xs lg=\"5\" className=\"text-center align-middle\">\n              <ListPlayersText team={team1} />\n            </Col>\n            <Col xs lg=\"2\" className=\"text-center align-middle\">\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n              <br />\n              <StartEnterGame />\n            </Col>\n            <Col xs lg=\"5\" className=\"text-center align-middle\">\n              <ListPlayersText team={team2} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Container fluid className=\"h-100\">\n          <Row className=\"justify-content-md-center h-100\">\n            <Col xs lg=\"5\" className=\"text-center align-middle\">\n              {!inKo && <ListPlayersText team={team1} />}\n            </Col>\n            <Col xs lg=\"2\" className=\"text-center align-middle\">\n              {showKO()}\n            </Col>\n            <Col xs lg=\"5\" className=\"text-center align-middle\">\n              {!inKo && <ListPlayersText team={team2} />}\n            </Col>\n          </Row>\n        </Container>\n        <ModalWinner gameSettings={gameSettings} />\n      </div>\n    );\n  }\n}\n","import React, { useContext } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport InGame from './InGame.js';\nimport GameContext from './GameContext.js';\n// import GameContext from \"./GameContext.js\";\n\nexport default function Answers() {\n\t// const gameSettings = useContext(GameContext);\n\tconst gameSettings = useContext(GameContext);\n\n\tif (gameSettings.idLive.length < 1) {\n\t\treturn '...';\n\t} else {\n\t\treturn <InGame />;\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport socketIOClient from 'socket.io-client';\nimport { Container, Row, Col, Spinner } from 'react-bootstrap';\nimport SocketContext from './components/SocketContext.js';\nimport GameContext from './components/GameContext.js';\nimport Team1Context from './components/Team1Context.js';\nimport Team2Context from './components/Team2Context.js';\nimport LifeBar from './components/LifeBar.js';\nimport Center from './components/Center.js';\nimport victory from './img/victory.gif';\n\nexport default function App() {\n\tconst [socket, setSocket] = useState(null);\n\tconst [gameSettings, setGameSettings] = useState(null);\n\tconst [team1, setTeam1] = useState(null);\n\tconst [team2, setTeam2] = useState(null);\n\tconst [isReady, setIsReady] = useState(false);\n\tconst [youtubeOff, setYoutubeOff] = useState(true);\n\n\tuseEffect(() => {\n\t\tlet idLive = window.location.pathname.split('/')[1];\n\t\t//console.log(window.location);\n\n\t\tlet url = 'https://localhost:21266?idLive=' + idLive;\n\t\tif (window.location.hostname.includes('mrguinas')) {\n\t\t\turl = 'https://multistreamer.xyz:21266?idLive=' + idLive;\n\t\t}\n\t\tconsole.log(url);\n\t\tconst socket = socketIOClient(url);\n\t\tsetSocket(socket);\n\t\tsocket.on('gameSettings', (gameSettings) => {\n\t\t\tsetYoutubeOff(false);\n\t\t\tconsole.log(gameSettings);\n\t\t\tsetGameSettings(gameSettings);\n\t\t\tsetIsReady(true);\n\t\t\t//socket.emit(\"nextBattle\");\n\t\t});\n\t\tsocket.on('youtubeOff', () => {\n\t\t\tsetYoutubeOff(true);\n\t\t\tsetIsReady(false);\n\t\t});\n\t\tsocket.on('team1', (team) => {\n\t\t\tsetTeam1(team);\n\t\t});\n\t\tsocket.on('team2', (team) => {\n\t\t\tsetTeam2(team);\n\t\t});\n\t}, []);\n\tfunction notWorking() {\n\t\tif (youtubeOff) {\n\t\t\treturn 'Uso indevido';\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Spinner animation=\"border\" variant=\"dark\" style={{ width: '8rem', height: '8rem' }}>\n\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t</Spinner>\n\t\t\t);\n\t\t}\n\t}\n\tfunction winner() {\n\t\treturn 'O ' + this.state.gameSettings.winner + ' VENCEU';\n\t}\n\n\tif (isReady && !youtubeOff) {\n\t\tif (gameSettings.winner) {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<GameContext.Provider value={gameSettings}>\n\t\t\t\t\t\t<Team1Context.Provider value={team1}>\n\t\t\t\t\t\t\t<Team2Context.Provider value={team2}>\n\t\t\t\t\t\t\t\t<SocketContext.Provider value={socket}>\n\t\t\t\t\t\t\t\t\t<LifeBar gameSettings={gameSettings} />\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<Container fluid>\n\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={victory} width=\"600vw\" alt=\"VS\" />\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<b>{winner()}</b>\n\t\t\t\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t</SocketContext.Provider>\n\t\t\t\t\t\t\t</Team2Context.Provider>\n\t\t\t\t\t\t</Team1Context.Provider>\n\t\t\t\t\t</GameContext.Provider>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<GameContext.Provider value={gameSettings}>\n\t\t\t\t\t\t<Team1Context.Provider value={team1}>\n\t\t\t\t\t\t\t<Team2Context.Provider value={team2}>\n\t\t\t\t\t\t\t\t<SocketContext.Provider value={socket}>\n\t\t\t\t\t\t\t\t\t<LifeBar gameSettings={gameSettings} />\n\t\t\t\t\t\t\t\t\t<Container fluid className=\"h-100\">\n\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Col></Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t<Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Center />\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t</SocketContext.Provider>\n\t\t\t\t\t\t\t</Team2Context.Provider>\n\t\t\t\t\t\t</Team1Context.Provider>\n\t\t\t\t\t</GameContext.Provider>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn (\n\t\t\t<Container fluid className=\"align-middle h-100\">\n\t\t\t\t<Row className=\"justify-content-md-center align-middle h-100\">\n\t\t\t\t\t<Col className=\"text-center align-middle h-100\">\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t{notWorking()}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n","module.exports = __webpack_public_path__ + \"static/media/vs.2433496f.png\";","module.exports = __webpack_public_path__ + \"static/media/trophy.d9db92ab.gif\";","module.exports = __webpack_public_path__ + \"static/media/CaboAtaquePragas.23937534.png\";","module.exports = __webpack_public_path__ + \"static/media/CaboAtaqueVermes.b79e156d.png\";","module.exports = __webpack_public_path__ + \"static/media/CaboDefesaVermes.6f164161.png\";","module.exports = __webpack_public_path__ + \"static/media/CaboDefesaPragas.dada4542.png\";","module.exports = __webpack_public_path__ + \"static/media/ko.6aedb4f5.png\";","module.exports = __webpack_public_path__ + \"static/media/victory.59d065af.gif\";"],"sourceRoot":""}